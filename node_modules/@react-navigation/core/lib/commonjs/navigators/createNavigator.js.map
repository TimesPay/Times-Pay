{"version":3,"sources":["createNavigator.js"],"names":["createNavigator","NavigatorView","router","navigationConfig","Navigator","props","context","state","descriptors","screenProps","theme","themeContext","setState","navigation","nextProps","currentState","prevDescriptors","routes","TypeError","reduce","acc","route","key","getComponent","getComponentForRouteName","bind","routeName","childNavigation","getChildNavigation","options","getScreenOptions","React","Component","contextType","ThemeContext","navigationOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\nimport ThemeContext from '../views/ThemeContext';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    static contextType = ThemeContext;\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.state = {\n        descriptors: {},\n        screenProps: this.props.screenProps,\n        theme: context,\n        themeContext: context,\n      };\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n      const prevDescriptors = currentState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = routes.reduce((acc, route) => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === currentState.screenProps &&\n          currentState.themeContext === currentState.theme\n        ) {\n          acc[route.key] = prevDescriptors[route.key];\n          return acc;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(\n          childNavigation,\n          screenProps,\n          currentState.themeContext\n        );\n        acc[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n        return acc;\n      }, {});\n\n      return { descriptors, screenProps, theme: state.themeContext };\n    }\n\n    componentDidUpdate() {\n      if (this.context !== this.state.themeContext) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ themeContext: this.context });\n      }\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]}