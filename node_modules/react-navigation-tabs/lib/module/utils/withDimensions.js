import _extends from"@babel/runtime/helpers/extends";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";import _possibleConstructorReturn from"@babel/runtime/helpers/possibleConstructorReturn";import _getPrototypeOf from"@babel/runtime/helpers/getPrototypeOf";import _inherits from"@babel/runtime/helpers/inherits";var _jsxFileName="/Users/satya/Workspace/Callstack/react-navigation-tabs/src/utils/withDimensions.tsx";import*as React from'react';import{Dimensions}from'react-native';import hoistNonReactStatic from'hoist-non-react-statics';export var isOrientationLandscape=function isOrientationLandscape(_ref){var width=_ref.width,height=_ref.height;return width>height;};export default function withDimensions(WrappedComponent){var EnhancedComponent=function(_React$Component){_inherits(EnhancedComponent,_React$Component);function EnhancedComponent(props){var _this;_classCallCheck(this,EnhancedComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(EnhancedComponent).call(this,props));_this.handleOrientationChange=function(_ref2){var window=_ref2.window;var width=window.width,height=window.height;_this.setState({dimensions:{width:width,height:height},isLandscape:isOrientationLandscape({width:width,height:height})});};var _Dimensions$get=Dimensions.get('window'),_width=_Dimensions$get.width,_height=_Dimensions$get.height;_this.state={dimensions:{width:_width,height:_height},isLandscape:isOrientationLandscape({width:_width,height:_height})};return _this;}_createClass(EnhancedComponent,[{key:"componentDidMount",value:function componentDidMount(){Dimensions.addEventListener('change',this.handleOrientationChange);}},{key:"componentWillUnmount",value:function componentWillUnmount(){Dimensions.removeEventListener('change',this.handleOrientationChange);}},{key:"render",value:function render(){return React.createElement(WrappedComponent,_extends({},this.props,this.state,{__source:{fileName:_jsxFileName,lineNumber:52}}));}}]);return EnhancedComponent;}(React.Component);EnhancedComponent.displayName="withDimensions("+WrappedComponent.displayName+")";return hoistNonReactStatic(EnhancedComponent,WrappedComponent);}
//# sourceMappingURL=withDimensions.js.map