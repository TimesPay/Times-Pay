{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","View","StyleSheet","Animated","TabBarIcon","props","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","icon","opacity","focused","tintColor","Component","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,UAAf,KAAuD,cAAvD,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,C,GAmBqBC,CAAAA,U,mRACV,iBAUH,KAAKC,KAVF,CAELC,KAFK,aAELA,KAFK,CAGLC,aAHK,aAGLA,aAHK,CAILC,eAJK,aAILA,eAJK,CAKLC,eALK,aAKLA,eALK,CAMLC,iBANK,aAMLA,iBANK,CAOLC,UAPK,aAOLA,UAPK,CAQLC,UARK,aAQLA,UARK,CASLC,KATK,aASLA,KATK,CAcP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEA,KAAb,iDACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACC,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAET,aAAX,CAAd,CAAtB,iDACGI,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,IAFC,CAGVL,UAAU,CAAVA,UAHU,CAIVM,SAAS,CAAET,eAJD,CAAD,CADb,CADF,CASE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACK,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAER,eAAX,CAAd,CAAtB,iDACGG,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,KAFC,CAGVL,UAAU,CAAVA,UAHU,CAIVM,SAAS,CAAER,iBAJD,CAAD,CADb,CATF,CADF,CAoBD,C,wBAnCqCV,KAAK,CAACmB,S,SAAzBf,U,aAsCrB,GAAMU,CAAAA,MAAM,CAAGZ,UAAU,CAACkB,MAAX,CAAkB,CAC/BL,IAAI,CAAE,CAIJM,QAAQ,CAAE,UAJN,CAKJC,SAAS,CAAE,QALP,CAMJC,UAAU,CAAE,QANR,CAOJC,cAAc,CAAE,QAPZ,CAQJC,MAAM,CAAE,MARJ,CASJC,KAAK,CAAE,MATH,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]}