{"version":3,"sources":["RadioButtonItem.tsx"],"names":["React","View","Text","StyleSheet","RadioButtonContext","handlePress","TouchableRipple","RadioButton","RadioButtonItem","props","value","label","style","onPress","status","context","onValueChange","styles","container","Component","displayName","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal"],"mappings":"2bAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,UAArB,KAA6D,cAA7D,CACA,OAASC,kBAAT,KAA2D,oBAA3D,CACA,OAASC,WAAT,KAA4B,SAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,GAqDMC,CAAAA,e,4SAGK,iBAC0C,KAAKC,KAD/C,CACCC,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACeC,KADf,aACeA,KADf,CACsBC,QADtB,aACsBA,OADtB,CAC+BC,MAD/B,aAC+BA,MAD/B,CAGP,MACE,qBAAC,kBAAD,CAAoB,QAApB,kDACG,SAACC,OAAD,CAAsC,CACrC,MACE,qBAAC,eAAD,EACE,OAAO,CAAE,yBACPV,CAAAA,WAAW,CAAC,CACVQ,OAAO,CAAEA,QADC,CAEVG,aAAa,CAAED,OAAO,EAAIA,OAAO,CAACC,aAFxB,CAGVN,KAAK,CAALA,KAHU,CAAD,CADJ,EADX,iDASE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACO,MAAM,CAACC,SAAR,CAAmBN,KAAnB,CAAb,CAAwC,aAAa,CAAC,MAAtD,iDACE,oBAAC,IAAD,kDAAOD,KAAP,CADF,CAEE,oBAAC,WAAD,EAAa,KAAK,CAAED,KAApB,CAA2B,MAAM,CAAEI,MAAnC,iDAFF,CATF,CADF,CAgBD,CAlBH,CADF,CAsBD,C,6BA5B2Bd,KAAK,CAACmB,S,EAA9BX,e,CACGY,W,CAAc,kB,CA8BvB,cAAeZ,CAAAA,eAAf,CAEA,GAAMS,CAAAA,MAAM,CAAGd,UAAU,CAACkB,MAAX,CAAkB,CAC/BH,SAAS,CAAE,CACTI,aAAa,CAAE,KADN,CAETC,UAAU,CAAE,QAFH,CAGTC,cAAc,CAAE,eAHP,CAITC,eAAe,CAAE,CAJR,CAKTC,iBAAiB,CAAE,EALV,CADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport RadioButton from './RadioButton';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <RadioButton.Item label=\"First item\" value=\"first\" />\n *           <RadioButton.Item label=\"Second item\" value=\"second\" />\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonItem extends React.Component<Props> {\n  static displayName = 'RadioButton.Item';\n\n  render() {\n    const { value, label, style, onPress, status } = this.props;\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          return (\n            <TouchableRipple\n              onPress={() =>\n                handlePress({\n                  onPress: onPress,\n                  onValueChange: context && context.onValueChange,\n                  value,\n                })\n              }\n            >\n              <View style={[styles.container, style]} pointerEvents=\"none\">\n                <Text>{label}</Text>\n                <RadioButton value={value} status={status}></RadioButton>\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default RadioButtonItem;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n"]}