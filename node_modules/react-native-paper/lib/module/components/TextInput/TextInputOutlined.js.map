{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","flatten","fontSizeStyle","fontSize","fontWeight","height","backgroundColor","background","viewStyle","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","containerStyle","text","alpha","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","minHeight","paddingTop","paddingBottom","ref","placeholderTextColor","underlineColorAndroid","input","textAlignVertical","Component","defaultProps","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","left","paddingHorizontal","right","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { RenderProps, ChildTextInputProps } from './types';\nimport { Theme } from '../../types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor,\n      activeColor,\n      outlineColor,\n      placeholderColor,\n      errorColor,\n      containerStyle;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n    };\n\n    const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        {/* \n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android \n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n\n            {render &&\n              render({\n                ...rest,\n                ref: innerRef,\n                onChangeText,\n                placeholder: label\n                  ? parentState.placeholder\n                  : this.props.placeholder,\n                placeholderTextColor: placeholderColor,\n                editable: !disabled && editable,\n                selectionColor:\n                  typeof selectionColor === 'undefined'\n                    ? activeColor\n                    : selectionColor,\n                onFocus,\n                onBlur,\n                underlineColorAndroid: 'transparent',\n                multiline,\n                style: [\n                  styles.input,\n                  !multiline || (multiline && height)\n                    ? { height: inputHeight }\n                    : {},\n                  paddingOut,\n                  {\n                    ...font,\n                    fontSize,\n                    fontWeight,\n                    color: inputTextColor,\n                    textAlignVertical: multiline ? 'top' : 'center',\n                  },\n                ],\n              } as RenderProps)}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}