{"version":3,"sources":["Polyline.tsx"],"names":["Polyline","setNativeProps","props","points","d","root","refMethod","Shape","displayName","defaultProps"],"mappings":"6sBAAA,oDACA,oDACA,uDAEA,2F,+FAEqBA,CAAAA,Q,saAOnBC,c,CAAiB,SACfC,KADe,CAKZ,IACKC,CAAAA,MADL,CACgBD,KADhB,CACKC,MADL,CAEH,GAAIA,MAAJ,CAAY,CACVD,KAAK,CAACE,CAAN,KAAc,+BAAkBD,MAAlB,CAAd,CACD,CACD,MAAKE,IAAL,EAAa,MAAKA,IAAL,CAAUJ,cAAV,CAAyBC,KAAzB,CAAb,CACD,C,wFAEQ,IACCA,CAAAA,KADD,CACW,IADX,CACCA,KADD,IAECC,CAAAA,MAFD,CAEYD,KAFZ,CAECC,MAFD,CAGP,MACE,8BAAC,aAAD,wBACE,GAAG,CAAE,KAAKG,SADZ,CAEE,CAAC,CAAEH,MAAM,MAAQ,+BAAkBA,MAAlB,CAFnB,EAGMD,KAHN,mDADF,CAOD,C,sBA9BmCK,e,2BAAjBP,Q,CACZQ,W,CAAc,U,CADFR,Q,CAGZS,Y,CAAe,CACpBN,MAAM,CAAE,EADY,C","sourcesContent":["import React from 'react';\nimport Path from './Path';\nimport Shape from './Shape';\nimport { NumberProp } from '../lib/extract/types';\nimport extractPolyPoints from '../lib/extract/extractPolyPoints';\n\nexport default class Polyline extends Shape<{ points?: number[] }> {\n  static displayName = 'Polyline';\n\n  static defaultProps = {\n    points: '',\n  };\n\n  setNativeProps = (\n    props: Object & {\n      points?: string | (NumberProp)[];\n      d?: string;\n    },\n  ) => {\n    const { points } = props;\n    if (points) {\n      props.d = `M${extractPolyPoints(points)}`;\n    }\n    this.root && this.root.setNativeProps(props);\n  };\n\n  render() {\n    const { props } = this;\n    const { points } = props;\n    return (\n      <Path\n        ref={this.refMethod as ((instance: Path | null) => void)}\n        d={points && `M${extractPolyPoints(points)}`}\n        {...props}\n      />\n    );\n  }\n}\n"]}