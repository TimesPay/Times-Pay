{"version":3,"sources":["Pattern.tsx"],"names":["Pattern","props","patternTransform","transform","id","x","y","width","height","patternUnits","patternContentUnits","children","viewBox","preserveAspectRatio","matrix","refMethod","units","Shape","displayName","defaultProps","RNSVGPattern"],"mappings":"kuBAAA,oDACA,yCACA,yFACA,qFAEA,2DACA,uD,8FAEqBA,CAAAA,O,gTAsBV,IACCC,CAAAA,KADD,CACW,IADX,CACCA,KADD,IAGLC,CAAAA,gBAHK,CAeHD,KAfG,CAGLC,gBAHK,CAILC,SAJK,CAeHF,KAfG,CAILE,SAJK,CAKLC,EALK,CAeHH,KAfG,CAKLG,EALK,CAMLC,CANK,CAeHJ,KAfG,CAMLI,CANK,CAOLC,CAPK,CAeHL,KAfG,CAOLK,CAPK,CAQLC,KARK,CAeHN,KAfG,CAQLM,KARK,CASLC,MATK,CAeHP,KAfG,CASLO,MATK,CAULC,YAVK,CAeHR,KAfG,CAULQ,YAVK,CAWLC,mBAXK,CAeHT,KAfG,CAWLS,mBAXK,CAYLC,QAZK,CAeHV,KAfG,CAYLU,QAZK,CAaLC,OAbK,CAeHX,KAfG,CAaLW,OAbK,CAcLC,mBAdK,CAeHZ,KAfG,CAcLY,mBAdK,CAgBP,GAAMC,CAAAA,MAAM,CAAG,8BAAiBZ,gBAAgB,EAAIC,SAApB,EAAiCF,KAAlD,CAAf,CACA,MACE,8BAAC,YAAD,wBACE,GAAG,CAAE,KAAKc,SADZ,CAEE,IAAI,CAAEX,EAFR,CAGE,CAAC,CAAEC,CAHL,CAIE,CAAC,CAAEC,CAJL,CAKE,KAAK,CAAEC,KALT,CAME,MAAM,CAAEC,MANV,CAOE,MAAM,CAAEM,MAPV,CAQE,gBAAgB,CAAEA,MARpB,CASE,YAAY,CAAGL,YAAY,EAAIO,eAAMP,YAAN,CAAjB,EAAyC,CATzD,CAUE,mBAAmB,CACjBC,mBAAmB,CAAGM,eAAMN,mBAAN,CAAH,CAAgC,CAXvD,EAaM,4BAAe,CAAEE,OAAO,CAAPA,OAAF,CAAWC,mBAAmB,CAAnBA,mBAAX,CAAf,CAbN,mDAeGF,QAfH,CADF,CAmBD,C,qBA1DkCM,e,0BAAhBjB,O,CAaZkB,W,CAAc,S,CAbFlB,O,CAeZmB,Y,CAAe,CACpBd,CAAC,CAAE,IADiB,CAEpBC,CAAC,CAAE,IAFiB,CAGpBC,KAAK,CAAE,MAHa,CAIpBC,MAAM,CAAE,MAJY,C,CA8CjB,GAAMY,CAAAA,YAAY,CAAG,wCAAuB,cAAvB,CAArB,C","sourcesContent":["import React from 'react';\nimport { requireNativeComponent } from 'react-native';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport { NumberProp, TransformProps } from '../lib/extract/types';\nimport units from '../lib/units';\nimport Shape from './Shape';\n\nexport default class Pattern extends Shape<{\n  id?: string;\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  transform?: number[] | string | TransformProps;\n  patternTransform?: number[] | string | TransformProps;\n  patternUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n  patternContentUnits?: 'objectBoundingBox' | 'userSpaceOnUse';\n}> {\n  static displayName = 'Pattern';\n\n  static defaultProps = {\n    x: '0%',\n    y: '0%',\n    width: '100%',\n    height: '100%',\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      patternTransform,\n      transform,\n      id,\n      x,\n      y,\n      width,\n      height,\n      patternUnits,\n      patternContentUnits,\n      children,\n      viewBox,\n      preserveAspectRatio,\n    } = props;\n    const matrix = extractTransform(patternTransform || transform || props);\n    return (\n      <RNSVGPattern\n        ref={this.refMethod}\n        name={id}\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        matrix={matrix}\n        patternTransform={matrix}\n        patternUnits={(patternUnits && units[patternUnits]) || 0}\n        patternContentUnits={\n          patternContentUnits ? units[patternContentUnits] : 1\n        }\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        {children}\n      </RNSVGPattern>\n    );\n  }\n}\n\nexport const RNSVGPattern = requireNativeComponent('RNSVGPattern');\n"]}