{"version":3,"sources":["extractResponder.ts"],"names":["responderKeys","Object","keys","PanResponder","create","panHandlers","numResponderKeys","length","extractResponder","props","ref","onPress","disabled","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","pointerEvents","o","responsible","i","key","value","hasTouchableProperty","onResponderMove","touchableHandleResponderMove","onResponderGrant","touchableHandleResponderGrant","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest"],"mappings":"0FAAA,yCAGA,GAAMA,CAAAA,aAAa,CAAGC,MAAM,CAACC,IAAP,CAAYC,0BAAaC,MAAb,CAAoB,EAApB,EAAwBC,WAApC,CAAtB,CACA,GAAMC,CAAAA,gBAAgB,CAAGN,aAAa,CAACO,MAAvC,CAEe,QAASC,CAAAA,gBAAT,CAEbC,KAFa,CAGbC,GAHa,CAIb,IAEEC,CAAAA,OAFF,CAWIF,KAXJ,CAEEE,OAFF,CAGEC,QAHF,CAWIH,KAXJ,CAGEG,QAHF,CAIEC,SAJF,CAWIJ,KAXJ,CAIEI,SAJF,CAKEC,UALF,CAWIL,KAXJ,CAKEK,UALF,CAMEC,WANF,CAWIN,KAXJ,CAMEM,WANF,CAOEC,YAPF,CAWIP,KAXJ,CAOEO,YAPF,CAQEC,aARF,CAWIR,KAXJ,CAQEQ,aARF,CASEC,cATF,CAWIT,KAXJ,CASES,cATF,CAUEC,aAVF,CAWIV,KAXJ,CAUEU,aAVF,CAYA,GAAMC,CAAAA,CAEL,CAAG,EAFJ,CAIA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGhB,gBAApB,CAAsCgB,CAAC,EAAvC,CAA2C,CACzC,GAAMC,CAAAA,GAAG,CAAGvB,aAAa,CAACsB,CAAD,CAAzB,CACA,GAAME,CAAAA,KAAK,CAAGf,KAAK,CAACc,GAAD,CAAnB,CACA,GAAIC,KAAJ,CAAW,CACTH,WAAW,CAAG,IAAd,CACAD,CAAC,CAACG,GAAD,CAAD,CAASC,KAAT,CACD,CACF,CAED,GAAIL,aAAJ,CAAmB,CACjBC,CAAC,CAACD,aAAF,CAAkBA,aAAlB,CACD,CAED,GAAMM,CAAAA,oBAAoB,CACxBb,QAAQ,EAAI,IAAZ,EACAD,OADA,EAEAE,SAFA,EAGAC,UAHA,EAIAC,WAJA,EAKAC,YALA,EAMAC,aANA,EAOAC,cARF,CAUA,GAAIO,oBAAJ,CAA0B,CACxBJ,WAAW,CAAG,IAAd,CACAD,CAAC,CAACM,eAAF,CAAoBhB,GAAG,CAACiB,4BAAxB,CACAP,CAAC,CAACQ,gBAAF,CAAqBlB,GAAG,CAACmB,6BAAzB,CACAT,CAAC,CAACU,kBAAF,CAAuBpB,GAAG,CAACqB,+BAA3B,CACAX,CAAC,CAACY,oBAAF,CAAyBtB,GAAG,CAACuB,iCAA7B,CACAb,CAAC,CAACc,yBAAF,CAA8BxB,GAAG,CAACyB,sCAAlC,CACAf,CAAC,CAACgB,6BAAF,CACE1B,GAAG,CAAC2B,0CADN,CAED,CAED,GAAIhB,WAAJ,CAAiB,CACfD,CAAC,CAACC,WAAF,CAAgB,IAAhB,CACD,CAED,MAAOD,CAAAA,CAAP,CACD","sourcesContent":["import { PanResponder } from 'react-native';\nimport { ResponderInstanceProps, ResponderProps } from './types';\n\nconst responderKeys = Object.keys(PanResponder.create({}).panHandlers);\nconst numResponderKeys = responderKeys.length;\n\nexport default function extractResponder(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: { [x: string]: any } & ResponderProps,\n  ref: ResponderInstanceProps,\n) {\n  const {\n    onPress,\n    disabled,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayPressIn,\n    delayPressOut,\n    delayLongPress,\n    pointerEvents,\n  } = props;\n  const o: {\n    [touchableProperty: string]: unknown;\n  } = {};\n\n  let responsible = false;\n  for (let i = 0; i < numResponderKeys; i++) {\n    const key = responderKeys[i];\n    const value = props[key];\n    if (value) {\n      responsible = true;\n      o[key] = value;\n    }\n  }\n\n  if (pointerEvents) {\n    o.pointerEvents = pointerEvents;\n  }\n\n  const hasTouchableProperty =\n    disabled != null ||\n    onPress ||\n    onPressIn ||\n    onPressOut ||\n    onLongPress ||\n    delayPressIn ||\n    delayPressOut ||\n    delayLongPress;\n\n  if (hasTouchableProperty) {\n    responsible = true;\n    o.onResponderMove = ref.touchableHandleResponderMove;\n    o.onResponderGrant = ref.touchableHandleResponderGrant;\n    o.onResponderRelease = ref.touchableHandleResponderRelease;\n    o.onResponderTerminate = ref.touchableHandleResponderTerminate;\n    o.onStartShouldSetResponder = ref.touchableHandleStartShouldSetResponder;\n    o.onResponderTerminationRequest =\n      ref.touchableHandleResponderTerminationRequest;\n  }\n\n  if (responsible) {\n    o.responsible = true;\n  }\n\n  return o;\n}\n"]}