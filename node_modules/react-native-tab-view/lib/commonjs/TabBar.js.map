{"version":3,"sources":["TabBar.tsx"],"names":["TabBar","state","layout","width","height","tabWidths","measuredTabWidths","scrollAmount","Animated","Value","getFlattenedTabWidth","style","tabStyle","StyleSheet","flatten","undefined","getComputedTabWidth","index","routes","scrollEnabled","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","length","getMemoizedTabWidthGettter","i","getMaxScrollDistance","tabBarWidth","layoutWidth","getTabBarWidth","props","navigationState","reduce","acc","_","normalizeScrollValue","value","maxDistance","scrollValue","Math","max","min","Platform","OS","I18nManager","isRTL","getScrollAmount","centerDistance","Array","from","total","tabWidth","resetScroll","scrollView","scrollTo","x","animated","handleLayout","e","nativeEvent","requestAnimationFrame","setState","getTranslateX","maxScrollDistance","multiply","sub","prevProps","prevState","every","r","position","jumpTo","bounces","getAccessibilityLabel","getAccessible","getLabelText","getTestID","renderBadge","renderIcon","renderLabel","activeColor","inactiveColor","pressColor","pressOpacity","onTabPress","onTabLongPress","labelStyle","indicatorStyle","contentContainerStyle","indicatorContainerStyle","isWidthDynamic","tabBarWidthPercent","translateX","styles","tabBar","indicatorContainer","transform","renderIndicator","getTabWidth","scroll","tabContent","container","event","contentOffset","el","getNode","map","route","defaultPrevented","preventDefault","React","Component","defaultProps","title","toUpperCase","accessible","accessibilityLabel","testID","create","flex","overflow","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport TabBarItem from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport memoize from './memoize';\nimport {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  Event,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n  tabWidths: { [key: string]: number };\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state: State = {\n    layout: { width: 0, height: 0 },\n    tabWidths: {},\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    const { navigationState } = this.props;\n    const { layout, tabWidths } = this.state;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        navigationState.routes.length ||\n      prevProps.navigationState.index !== navigationState.index ||\n      prevState.layout.width !== layout.width ||\n      prevState.tabWidths !== tabWidths\n    ) {\n      if (\n        this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' &&\n        !(\n          layout.width &&\n          navigationState.routes.every(\n            r => typeof tabWidths[r.key] === 'number'\n          )\n        )\n      ) {\n        // When tab width is dynamic, only adjust the scroll once we have all tab widths and layout\n        return;\n      }\n\n      this.resetScroll(navigationState.index);\n    }\n  }\n\n  // to store the layout.width of each tab\n  // when all onLayout's are fired, this would be set in state\n  private measuredTabWidths: { [key: string]: number } = {};\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollView: ScrollView | undefined;\n\n  private getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n    const tabStyle = StyleSheet.flatten(style);\n\n    return tabStyle ? tabStyle.width : undefined;\n  };\n\n  private getComputedTabWidth = (\n    index: number,\n    layout: Layout,\n    routes: Route[],\n    scrollEnabled: boolean | undefined,\n    tabWidths: { [key: string]: number },\n    flattenedWidth: string | number | undefined\n  ) => {\n    if (flattenedWidth === 'auto') {\n      return tabWidths[routes[index].key] || 0;\n    }\n\n    switch (typeof flattenedWidth) {\n      case 'number':\n        return flattenedWidth;\n      case 'string':\n        if (flattenedWidth.endsWith('%')) {\n          const width = parseFloat(flattenedWidth);\n          if (Number.isFinite(width)) {\n            return layout.width * (width / 100);\n          }\n        }\n    }\n\n    if (scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / routes.length;\n  };\n\n  private getMemoizedTabWidthGettter = memoize(\n    (\n      layout: Layout,\n      routes: Route[],\n      scrollEnabled: boolean | undefined,\n      tabWidths: { [key: string]: number },\n      flattenedWidth: string | number | undefined\n    ) => (i: number) =>\n      this.getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedWidth\n      )\n  );\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private getTabBarWidth = (props: Props<T>, state: State) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    return routes.reduce<number>(\n      (acc, _, i) =>\n        acc +\n        this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        ),\n      0\n    );\n  };\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const tabBarWidth = this.getTabBarWidth(props, state);\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, index: number) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    const centerDistance = Array.from({ length: index + 1 }).reduce<number>(\n      (total, _, i) => {\n        const tabWidth = this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        );\n\n        // To get the current index centered we adjust scroll amount by width of indexes\n        // 0 through (i - 1) and add half the width of current index i\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      },\n      0\n    );\n\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (index: number) => {\n    if (this.props.scrollEnabled) {\n      this.scrollView &&\n        this.scrollView.scrollTo({\n          x: this.getScrollAmount(this.props, this.state, index),\n          animated: true,\n        });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    // If we don't delay this state update, the UI gets stuck in weird state\n    // Maybe an issue in Reanimated?\n    // https://github.com/react-native-community/react-native-tab-view/issues/877\n    requestAnimationFrame(() =>\n      requestAnimationFrame(() =>\n        this.setState({\n          layout: {\n            height,\n            width,\n          },\n        })\n      )\n    );\n  };\n\n  private getTranslateX = memoize(\n    (scrollAmount: Animated.Node<number>, maxScrollDistance: number) =>\n      Animated.multiply(\n        Platform.OS === 'android' && I18nManager.isRTL\n          ? Animated.sub(maxScrollDistance, scrollAmount)\n          : scrollAmount,\n        I18nManager.isRTL ? 1 : -1\n      )\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n      indicatorContainerStyle,\n    } = this.props;\n    const { layout, tabWidths } = this.state;\n    const { routes } = navigationState;\n\n    const isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n    const tabBarWidth = this.getTabBarWidth(this.props, this.state);\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n            indicatorContainerStyle,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: isWidthDynamic ? 'auto' : `${100 / routes.length}%`,\n            style: indicatorStyle,\n            getTabWidth: this.getMemoizedTabWidthGettter(\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              this.getFlattenedTabWidth(tabStyle)\n            ),\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { x: this.scrollAmount },\n                },\n              },\n            ])}\n            ref={el => {\n              // @ts-ignore\n              this.scrollView = el && el.getNode();\n            }}\n          >\n            {routes.map((route: T) => (\n              <TabBarItem\n                onLayout={\n                  isWidthDynamic\n                    ? e => {\n                        this.measuredTabWidths[route.key] =\n                          e.nativeEvent.layout.width;\n\n                        // When we have measured widths for all of the tabs, we should updates the state\n                        // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                        if (\n                          routes.every(\n                            r =>\n                              typeof this.measuredTabWidths[r.key] === 'number'\n                          )\n                        ) {\n                          this.setState({\n                            tabWidths: { ...this.measuredTabWidths },\n                          });\n                        }\n                      }\n                    : undefined\n                }\n                key={route.key}\n                position={position}\n                route={route}\n                navigationState={navigationState}\n                getAccessibilityLabel={getAccessibilityLabel}\n                getAccessible={getAccessible}\n                getLabelText={getLabelText}\n                getTestID={getTestID}\n                renderBadge={renderBadge}\n                renderIcon={renderIcon}\n                renderLabel={renderLabel}\n                activeColor={activeColor}\n                inactiveColor={inactiveColor}\n                pressColor={pressColor}\n                pressOpacity={pressOpacity}\n                onPress={() => {\n                  const event: Scene<T> & Event = {\n                    route,\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                      event.defaultPrevented = true;\n                    },\n                  };\n\n                  onTabPress && onTabPress(event);\n\n                  if (event.defaultPrevented) {\n                    return;\n                  }\n\n                  this.props.jumpTo(route.key);\n                }}\n                onLongPress={() => onTabLongPress && onTabLongPress({ route })}\n                labelStyle={labelStyle}\n                style={tabStyle}\n              />\n            ))}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: 'scroll',\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]}