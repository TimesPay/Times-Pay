{"version":3,"sources":["index.js"],"names":["constants","handlers","logUnsupportedEvent","type","console","error","getPartialTag","languageCode","scriptCode","getCalendar","calendar","getCountry","country","getCurrencies","currencies","getLocales","locales","getNumberFormatSettings","numberFormatSettings","getTemperatureUnit","temperatureUnit","getTimeZone","timeZone","uses24HourClock","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone","addEventListener","handler","has","add","removeEventListener","delete","findBestAvailableLanguage","languageTags","index","length","currentLocale","languageTag","isRTL","includes","partialTag","next"],"mappings":"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","sourcesContent":["// @flow\n\nimport { constants, handlers } from \"./module\";\n\nimport type {\n  Calendar,\n  Locale,\n  LocalizationEvent,\n  NumberFormatSettings,\n  Option,\n  TemperatureUnit,\n} from \"./types\";\n\nexport type {\n  Calendar,\n  Locale,\n  LocalizationEvent,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nfunction logUnsupportedEvent(type: string) {\n  console.error(`\\`${type}\\` is not a valid react-native-localize event`);\n}\nfunction getPartialTag({ languageCode, scriptCode }: Locale) {\n  return languageCode + (scriptCode ? \"-\" + scriptCode : \"\");\n}\n\nexport function getCalendar(): Calendar {\n  return constants.calendar;\n}\nexport function getCountry(): string {\n  return constants.country;\n}\nexport function getCurrencies(): string[] {\n  return constants.currencies;\n}\nexport function getLocales(): Locale[] {\n  return constants.locales;\n}\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  return constants.numberFormatSettings;\n}\nexport function getTemperatureUnit(): TemperatureUnit {\n  return constants.temperatureUnit;\n}\nexport function getTimeZone(): string {\n  return constants.timeZone;\n}\nexport function uses24HourClock(): boolean {\n  return constants.uses24HourClock;\n}\nexport function usesMetricSystem(): boolean {\n  return constants.usesMetricSystem;\n}\nexport function usesAutoDateAndTime(): Option<boolean> {\n  return constants.usesAutoDateAndTime;\n}\nexport function usesAutoTimeZone(): Option<boolean> {\n  return constants.usesAutoTimeZone;\n}\n\nexport function addEventListener(\n  type: LocalizationEvent,\n  handler: Function,\n): void {\n  if (type !== \"change\") {\n    logUnsupportedEvent(type);\n  } else if (!handlers.has(handler)) {\n    handlers.add(handler);\n  }\n}\n\nexport function removeEventListener(\n  type: LocalizationEvent,\n  handler: Function,\n): void {\n  if (type !== \"change\") {\n    logUnsupportedEvent(type);\n  } else if (handlers.has(handler)) {\n    handlers.delete(handler);\n  }\n}\n\nexport function findBestAvailableLanguage(\n  languageTags: string[],\n): {|\n  languageTag: string,\n  isRTL: boolean,\n|} | void {\n  const locales = getLocales();\n\n  for (let index = 0; index < locales.length; index++) {\n    const currentLocale = locales[index];\n    const { languageTag, languageCode, isRTL } = currentLocale;\n\n    if (languageTags.includes(languageTag)) {\n      return { languageTag, isRTL };\n    }\n\n    const partialTag = getPartialTag(currentLocale);\n    const next = locales[index + 1];\n\n    if (\n      (!next || partialTag !== getPartialTag(next)) &&\n      languageTags.includes(partialTag)\n    ) {\n      return { languageTag: partialTag, isRTL };\n    }\n\n    if (\n      (!next || languageCode !== next.languageCode) &&\n      languageTags.includes(languageCode)\n    ) {\n      return { languageTag: languageCode, isRTL };\n    }\n  }\n}\n"]}